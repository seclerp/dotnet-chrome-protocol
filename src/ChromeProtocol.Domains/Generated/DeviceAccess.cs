// <auto-generated />
#nullable enable

namespace ChromeProtocol.Domains
{
  public static partial class DeviceAccess
  {
    /// <summary>Device request id.</summary>
    [System.Text.Json.Serialization.JsonConverter(typeof(ChromeProtocol.Core.PrimitiveTypeConverter))]
    public record RequestIdType(
      string Value
    ) : ChromeProtocol.Core.PrimitiveType<string>(Value)
    {
    }
    /// <summary>A device id.</summary>
    [System.Text.Json.Serialization.JsonConverter(typeof(ChromeProtocol.Core.PrimitiveTypeConverter))]
    public record DeviceIdType(
      string Value
    ) : ChromeProtocol.Core.PrimitiveType<string>(Value)
    {
    }
    /// <summary>Device information displayed in a user prompt to select a device.</summary>
    /// <param name="Name">Display name as it appears in a device request user prompt.</param>
    public record PromptDeviceType(
      [property: System.Text.Json.Serialization.JsonPropertyName("id")]
      ChromeProtocol.Domains.DeviceAccess.DeviceIdType Id,
      [property: System.Text.Json.Serialization.JsonPropertyName("name")]
      string Name
    ) : ChromeProtocol.Core.IType
    {
    }
    /// <summary>
    /// A device request opened a user prompt to select a device. Respond with the<br/>
    /// selectPrompt or cancelPrompt command.<br/>
    /// </summary>
    [ChromeProtocol.Core.MethodName("DeviceAccess.deviceRequestPrompted")]
    public record DeviceRequestPrompted(
      [property: System.Text.Json.Serialization.JsonPropertyName("id")]
      ChromeProtocol.Domains.DeviceAccess.RequestIdType Id,
      [property: System.Text.Json.Serialization.JsonPropertyName("devices")]
      System.Collections.Generic.IReadOnlyList<ChromeProtocol.Domains.DeviceAccess.PromptDeviceType> Devices
    ) : ChromeProtocol.Core.IEvent
    {
    }
    /// <summary>Enable events in this domain.</summary>
    public static ChromeProtocol.Domains.DeviceAccess.EnableRequest Enable()    
    {
      return new ChromeProtocol.Domains.DeviceAccess.EnableRequest();
    }
    /// <summary>Enable events in this domain.</summary>
    [ChromeProtocol.Core.MethodName("DeviceAccess.enable")]
    public record EnableRequest() : ChromeProtocol.Core.ICommand<EnableRequestResult>
    {
    }
    public record EnableRequestResult() : ChromeProtocol.Core.IType
    {
    }
    /// <summary>Disable events in this domain.</summary>
    public static ChromeProtocol.Domains.DeviceAccess.DisableRequest Disable()    
    {
      return new ChromeProtocol.Domains.DeviceAccess.DisableRequest();
    }
    /// <summary>Disable events in this domain.</summary>
    [ChromeProtocol.Core.MethodName("DeviceAccess.disable")]
    public record DisableRequest() : ChromeProtocol.Core.ICommand<DisableRequestResult>
    {
    }
    public record DisableRequestResult() : ChromeProtocol.Core.IType
    {
    }
    /// <summary>Select a device in response to a DeviceAccess.deviceRequestPrompted event.</summary>
    public static ChromeProtocol.Domains.DeviceAccess.SelectPromptRequest SelectPrompt(ChromeProtocol.Domains.DeviceAccess.RequestIdType Id, ChromeProtocol.Domains.DeviceAccess.DeviceIdType DeviceId)    
    {
      return new ChromeProtocol.Domains.DeviceAccess.SelectPromptRequest(Id, DeviceId);
    }
    /// <summary>Select a device in response to a DeviceAccess.deviceRequestPrompted event.</summary>
    [ChromeProtocol.Core.MethodName("DeviceAccess.selectPrompt")]
    public record SelectPromptRequest(
      [property: System.Text.Json.Serialization.JsonPropertyName("id")]
      ChromeProtocol.Domains.DeviceAccess.RequestIdType Id,
      [property: System.Text.Json.Serialization.JsonPropertyName("deviceId")]
      ChromeProtocol.Domains.DeviceAccess.DeviceIdType DeviceId
    ) : ChromeProtocol.Core.ICommand<SelectPromptRequestResult>
    {
    }
    public record SelectPromptRequestResult() : ChromeProtocol.Core.IType
    {
    }
    /// <summary>Cancel a prompt in response to a DeviceAccess.deviceRequestPrompted event.</summary>
    public static ChromeProtocol.Domains.DeviceAccess.CancelPromptRequest CancelPrompt(ChromeProtocol.Domains.DeviceAccess.RequestIdType Id)    
    {
      return new ChromeProtocol.Domains.DeviceAccess.CancelPromptRequest(Id);
    }
    /// <summary>Cancel a prompt in response to a DeviceAccess.deviceRequestPrompted event.</summary>
    [ChromeProtocol.Core.MethodName("DeviceAccess.cancelPrompt")]
    public record CancelPromptRequest(
      [property: System.Text.Json.Serialization.JsonPropertyName("id")]
      ChromeProtocol.Domains.DeviceAccess.RequestIdType Id
    ) : ChromeProtocol.Core.ICommand<CancelPromptRequestResult>
    {
    }
    public record CancelPromptRequestResult() : ChromeProtocol.Core.IType
    {
    }
  }
}
